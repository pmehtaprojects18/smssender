{"version":3,"sources":["../../../src/@ionic-native/plugins/sms/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAS,MAAA,EAAQ,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AA0BxE;;;;;;;;;;;;;;;;;;;;;;GAsBG;AASH;IAAyB,uBAAiB;IAA1C;;IAkCA,CAAC;IAhCC;;;;;;OAMG;IAKH,kBAAI,GAAJ,UACE,WAA8B,EAC9B,OAAe,EACf,OAAoB,IACF,MAAM,CAAC,CAAC,CAAC;IAE7B;;;OAGG;IAIH,2BAAa,GAAb,cAAoC,MAAM,CAAC,CAAC,CAAC;IAExC,cAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,kBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IApBA;QAJC,OAAO,CAAC;YACP,YAAY,EAAE,CAAC;YACf,UAAU,EAAE,CAAC;SACd,CAAC;;;;mCAK2B;IAS7B;QAHC,OAAO,CAAC;YACP,SAAS,EAAE,CAAC,SAAS,CAAC;SACvB,CAAC;;;;4CAC2C;IA1BlC,GAAG;QARf,MAAM,CAAC;YACN,UAAU,EAAE,KAAK;YACjB,MAAM,EAAE,oBAAoB;YAC5B,SAAS,EAAE,KAAK;YAChB,IAAI,EAAE,mDAAmD;YACzD,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,iBAAiB,CAAC;SAC5D,CAAC;OAEW,GAAG,CAkCf;IAAD,UAAC;CAlCD,AAkCC,CAlCwB,iBAAiB,GAkCzC;SAlCY,GAAG","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\r\n\r\n\r\n/**\r\n * Options for sending an SMS\r\n */\r\nexport interface SmsOptions {\r\n\r\n  /**\r\n   * Set to true to replace \\n by a new line. Default: false\r\n   */\r\n  replaceLineBreaks?: boolean;\r\n\r\n  android?: SmsOptionsAndroid;\r\n\r\n}\r\n\r\nexport interface SmsOptionsAndroid {\r\n\r\n  /**\r\n   * Set to \"INTENT\" to send SMS with the native android SMS messaging. Leaving it empty will send the SMS without opening any app.\r\n   */\r\n  intent?: string;\r\n\r\n}\r\n\r\n/**\r\n * @name SMS\r\n * @description\r\n *\r\n * Requires Cordova plugin: cordova-plugin-sms. For more info, please see the [SMS plugin docs](https://github.com/cordova-sms/cordova-sms-plugin).\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { SMS } from '@ionic-native/sms';\r\n *\r\n * constructor(private sms: SMS) { }\r\n *\r\n *\r\n * ...\r\n *\r\n *\r\n * // Send a text message using default options\r\n * this.sms.send('416123456', 'Hello world!');\r\n * ```\r\n * @interfaces\r\n * SmsOptions\r\n * SmsOptionsAndroid\r\n */\r\n@Plugin({\r\n  pluginName: 'SMS',\r\n  plugin: 'cordova-sms-plugin',\r\n  pluginRef: 'sms',\r\n  repo: 'https://github.com/cordova-sms/cordova-sms-plugin',\r\n  platforms: ['Android', 'iOS', 'Windows', 'Windows Phone 8']\r\n})\r\n\r\nexport class SMS extends IonicNativePlugin {\r\n\r\n  /**\r\n   * Sends sms to a number\r\n   * @param phoneNumber {string|Array<string>} Phone number\r\n   * @param message {string} Message\r\n   * @param options {SmsOptions} Options\r\n   * @returns {Promise<any>} Resolves promise when the SMS has been sent\r\n   */\r\n  @Cordova({\r\n    successIndex: 3,\r\n    errorIndex: 4\r\n  })\r\n  send(\r\n    phoneNumber: string | string[],\r\n    message: string,\r\n    options?: SmsOptions\r\n    ): Promise<any> { return; }\r\n\r\n  /**\r\n   * This function lets you know if the app has permission to send SMS\r\n   * @return {Promise<boolean>} returns a promise that resolves with a boolean that indicates if we have permission\r\n   */\r\n  @Cordova({\r\n    platforms: ['Android']\r\n  })\r\n  hasPermission(): Promise<boolean> { return; }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}